<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task" xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">

    <context:component-scan base-package="com.plazapoints.saas" />

    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven>
   	  <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper" ref="objectMapper" />
            </bean>
        </mvc:message-converters>
        
    </mvc:annotation-driven>
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <mvc:resources mapping="/resources/**" location="/resources/" cache-period="604800" />
    <mvc:view-controller path="/error" view-name="error" />
<!--     <mvc:view-controller path="/googleb3308ed71bf2ce38.html" view-name="/WEB-INF/jsp/views/googleb3308ed71bf2ce38.html"/> -->
    <mvc:resources mapping="/googleb3308ed71bf2ce38.html" location="/WEB-INF/jsp/views/googleb3308ed71bf2ce38.html" />

    <!-- Configures Handler Interceptors -->
    <mvc:interceptors>
        <!-- Changes the locale when a 'locale' request parameter is sent; e.g. /?locale=de -->
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="lang" />
        </bean>
    </mvc:interceptors>
    
    


    <!-- Tiles configuration -->
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="completeAutoload" value="true" />
    </bean>

    <bean id="viewResolver0" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="order" value="0" />
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
    </bean>
    
    <bean id="viewResolver1"  class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="order" value="1" />
        <property name="prefix" value="/WEB-INF/jsp/views/" />
        <property name="suffix" value=".jsp" />
    </bean>
    


    <bean name="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper" >
    	<property name="serializationInclusion">
         	<value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
         </property>
    </bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="2000000" />
    </bean>

    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <property name="defaultLocale" value="es" />
    </bean>
	

	<!-- PRUEBA HANDLER MAPPING -->
	<!-- <bean id="handlerMapping"
          class="org.resthub.web.springmvc.router.RouterHandlerMapping">
            <property name="routeFiles">
                <list>
                    <value>routes.conf</value>
                
                    Router will *append* routes declared in additional files
                    <value>addroutes.conf</value>
               
                </list>
            </property>
            
                Uncomment the following configuration line
                if you want routes to be dynamically reloaded when
                route files are modified.
                Can be a good idea in dev mode, not so much in production!
           
            <property name="autoReloadEnabled" value="true" />
    </bean> -->
    

</beans>
